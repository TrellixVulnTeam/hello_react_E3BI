{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D\\\\Desktop\\\\hello_react\\\\hello-react\\\\src\\\\Counter.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      number: 0,\n      fixedNumber: 0\n    };\n  }\n\n  render() {\n    const {\n      number,\n      fixedNumber\n    } = this.state; // state를 조회할 때는 this.state로 조회한다.\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uBC14\\uB00C\\uC9C0 \\uC54A\\uB294 \\uAC12: \", fixedNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        // onClick을 통해 버튼이 클릭되었을 때 호출할 함수를 지정한다.\n        onClick: () => {\n          this.setState(prevState => {\n            return {\n              number: prevState.number + 1\n            };\n          }); // 위 코드와 아래 코드는 완전히 똑같은 기능을 한다.\n          // 아래 코드는 함수에서 바로 객체를 반환한다는 의미이다.\n        },\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"names":["React","Component","Counter","state","number","fixedNumber","render","setState","prevState"],"sources":["C:/Users/D/Desktop/hello_react/hello-react/src/Counter.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n      number: 0,\r\n      fixedNumber: 0\r\n    };\r\n  render() {\r\n    const { number, fixedNumber } = this.state; // state를 조회할 때는 this.state로 조회한다.\r\n    return (\r\n      <div>\r\n        <h1>{number}</h1>\r\n        <h2>바뀌지 않는 값: {fixedNumber}</h2>\r\n        <button\r\n          // onClick을 통해 버튼이 클릭되었을 때 호출할 함수를 지정한다.\r\n          onClick={() => {\r\n            this.setState(prevState => {\r\n              return {\r\n                number: prevState.number + 1\r\n              };\r\n            });\r\n            // 위 코드와 아래 코드는 완전히 똑같은 기능을 한다.\r\n            // 아래 코드는 함수에서 바로 객체를 반환한다는 의미이다.\r\n          }}\r\n        >\r\n          +1\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAAA;IAAA;IAAA,KAC5BE,KAD4B,GACpB;MACNC,MAAM,EAAE,CADF;MAENC,WAAW,EAAE;IAFP,CADoB;EAAA;;EAK9BC,MAAM,GAAG;IACP,MAAM;MAAEF,MAAF;MAAUC;IAAV,IAA0B,KAAKF,KAArC,CADO,CACqC;;IAC5C,oBACE;MAAA,wBACE;QAAA,UAAKC;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,uDAAeC,WAAf;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QACE;QACA,OAAO,EAAE,MAAM;UACb,KAAKE,QAAL,CAAcC,SAAS,IAAI;YACzB,OAAO;cACLJ,MAAM,EAAEI,SAAS,CAACJ,MAAV,GAAmB;YADtB,CAAP;UAGD,CAJD,EADa,CAMb;UACA;QACD,CAVH;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAoBD;;AA3B6B;;AA8BhC,eAAeF,OAAf"},"metadata":{},"sourceType":"module"}
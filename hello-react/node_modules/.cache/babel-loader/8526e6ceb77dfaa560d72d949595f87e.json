{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D\\\\Desktop\\\\hello_react\\\\hello-react\\\\src\\\\IterationSample.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IterationSample = () => {\n  _s();\n\n  const [names, setNames] = useState([{\n    id: 1,\n    text: '눈사람'\n  }, {\n    id: 2,\n    text: '얼음'\n  }, {\n    id: 3,\n    text: '눈'\n  }, {\n    id: 4,\n    text: '바람'\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [nextId, setNextId] = useState(5); //새로운 항목을 추가할 때 사용할 id\n\n  const onChange = e => setInputText(e.target.value);\n\n  const onClick = () => {\n    const nextNames = names.concat({\n      id: nextId,\n      //next 값을 id로 설정하고\n      text: inputText\n    });\n    setNextId(nextId + 1); //nextId 값에 1을 더해 준다.\n\n    setNames(nextNames); //names 값을 업데이트한다.\n\n    setInputText(''); //inputText를 비운다.\n  };\n\n  const onRemove = id => {\n    const nextNames = names.filter(name => name.id !== id);\n    setNames(nextNames);\n  };\n\n  const nameList = names.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: name.text\n  }, name.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 38\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputText,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: nameList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IterationSample, \"/s1uGSL/fVROW17uu8rfkfGX7Yg=\");\n\n_c = IterationSample;\nexport default IterationSample;\n\nvar _c;\n\n$RefreshReg$(_c, \"IterationSample\");","map":{"version":3,"names":["React","useState","IterationSample","names","setNames","id","text","inputText","setInputText","nextId","setNextId","onChange","e","target","value","onClick","nextNames","concat","onRemove","filter","name","nameList","map"],"sources":["C:/Users/D/Desktop/hello_react/hello-react/src/IterationSample.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst IterationSample = () => {\r\n  const [names, setNames] = useState([\r\n    { id: 1, text: '눈사람'},\r\n    { id: 2, text: '얼음'},\r\n    { id: 3, text: '눈'},\r\n    { id: 4, text: '바람'}\r\n  ]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [nextId, setNextId] = useState(5); //새로운 항목을 추가할 때 사용할 id\r\n\r\n  const onChange = e => setInputText(e.target.value);\r\n  const onClick = () => {\r\n    const nextNames = names.concat({\r\n      id: nextId, //next 값을 id로 설정하고\r\n      text: inputText\r\n    });\r\n    setNextId(nextId + 1); //nextId 값에 1을 더해 준다.\r\n    setNames(nextNames); //names 값을 업데이트한다.\r\n    setInputText(''); //inputText를 비운다.\r\n  };\r\n  const onRemove = id => {\r\n    const nextNames = names.filter(name => name.id !== id);\r\n    setNames(nextNames);\r\n  };\r\n  \r\n  const nameList = names.map(name => <li key={name.id}>{name.text}</li>);\r\n  return (\r\n    <>\r\n      <input value={inputText} onChange={onChange} />\r\n      <button onClick={onClick}>추가</button>\r\n      <ul>{nameList}</ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IterationSample;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACjC;IAAEI,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CADiC,EAEjC;IAAED,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CAFiC,EAGjC;IAAED,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CAHiC,EAIjC;IAAED,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CAJiC,CAAD,CAAlC;EAMA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC,CAR4B,CAQa;;EAEzC,MAAMU,QAAQ,GAAGC,CAAC,IAAIJ,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlC;;EACA,MAAMC,OAAO,GAAG,MAAM;IACpB,MAAMC,SAAS,GAAGb,KAAK,CAACc,MAAN,CAAa;MAC7BZ,EAAE,EAAEI,MADyB;MACjB;MACZH,IAAI,EAAEC;IAFuB,CAAb,CAAlB;IAIAG,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT,CALoB,CAKG;;IACvBL,QAAQ,CAACY,SAAD,CAAR,CANoB,CAMC;;IACrBR,YAAY,CAAC,EAAD,CAAZ,CAPoB,CAOF;EACnB,CARD;;EASA,MAAMU,QAAQ,GAAGb,EAAE,IAAI;IACrB,MAAMW,SAAS,GAAGb,KAAK,CAACgB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACf,EAAL,KAAYA,EAAjC,CAAlB;IACAD,QAAQ,CAACY,SAAD,CAAR;EACD,CAHD;;EAKA,MAAMK,QAAQ,GAAGlB,KAAK,CAACmB,GAAN,CAAUF,IAAI,iBAAI;IAAA,UAAmBA,IAAI,CAACd;EAAxB,GAASc,IAAI,CAACf,EAAd;IAAA;IAAA;IAAA;EAAA,QAAlB,CAAjB;EACA,oBACE;IAAA,wBACE;MAAO,KAAK,EAAEE,SAAd;MAAyB,QAAQ,EAAEI;IAAnC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEI,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UAAKM;IAAL;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD,CAjCD;;GAAMnB,e;;KAAAA,e;AAmCN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D\\\\Desktop\\\\hello_react\\\\hooks-tutorial\\\\src\\\\Average.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useCallback, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getAverage = numbers => {\n  console.log(\"평균값 계산 중..\");\n  if (numbers.length === 0) return 0;\n  const sum = numbers.reduce((a, b) => a + b);\n  return sum / numbers.length;\n};\n\nconst Average = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [number, setNumber] = useState(\"\");\n  const inputEl = useRef(null);\n  const onChange = useCallback(e => {\n    setNumber(e.target.value);\n  }, []); //컴포넌트가 처음 렌더링될 때만 함수 생성\n\n  const onInsert = useCallback(() => {\n    const nextList = list.concat(parseInt(number));\n    setList(nextList);\n    setNumber(\"\");\n    inputEl.current.focus();\n  }, [number, list]); //number 혹은 list가 바뀌었을 때만 함수 생성\n\n  const avg = useMemo(() => getAverage(list), [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: number,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onInsert,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uD3C9\\uADE0\\uAC12:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \" \", getAverage(list)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Average, \"/mjbPIC5TZullY/9c7eXkzWYvmE=\");\n\n_c = Average;\nexport default Average;\n\nvar _c;\n\n$RefreshReg$(_c, \"Average\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","useRef","getAverage","numbers","console","log","length","sum","reduce","a","b","Average","list","setList","number","setNumber","inputEl","onChange","e","target","value","onInsert","nextList","concat","parseInt","current","focus","avg","map","index"],"sources":["C:/Users/D/Desktop/hello_react/hooks-tutorial/src/Average.js"],"sourcesContent":["import React, { useState, useMemo, useCallback, useRef } from \"react\";\r\n\r\nconst getAverage = (numbers) => {\r\n  console.log(\"평균값 계산 중..\");\r\n  if (numbers.length === 0) return 0;\r\n  const sum = numbers.reduce((a, b) => a + b);\r\n  return sum / numbers.length;\r\n};\r\n\r\nconst Average = () => {\r\n  const [list, setList] = useState([]);\r\n  const [number, setNumber] = useState(\"\");\r\n  const inputEl = useRef(null);\r\n\r\n  const onChange = useCallback((e) => {\r\n    setNumber(e.target.value);\r\n  }, []); //컴포넌트가 처음 렌더링될 때만 함수 생성\r\n  const onInsert = useCallback(() => {\r\n    const nextList = list.concat(parseInt(number));\r\n    setList(nextList);\r\n    setNumber(\"\");\r\n    inputEl.current.focus();\r\n  }, [number, list]); //number 혹은 list가 바뀌었을 때만 함수 생성\r\n\r\n  const avg = useMemo(() => getAverage(list), [list]);\r\n\r\n  return (\r\n    <div>\r\n      <input value={number} onChange={onChange} />\r\n      <button onClick={onInsert}>등록</button>\r\n      <ul>\r\n        {list.map((value, index) => (\r\n          <li key={index}>{value}</li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <b>평균값:</b> {getAverage(list)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Average;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,MAAhD,QAA8D,OAA9D;;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAa;EAC9BC,OAAO,CAACC,GAAR,CAAY,YAAZ;EACA,IAAIF,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B,OAAO,CAAP;EAC1B,MAAMC,GAAG,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA7B,CAAZ;EACA,OAAOH,GAAG,GAAGJ,OAAO,CAACG,MAArB;AACD,CALD;;AAOA,MAAMK,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;EACA,MAAMkB,OAAO,GAAGf,MAAM,CAAC,IAAD,CAAtB;EAEA,MAAMgB,QAAQ,GAAGjB,WAAW,CAAEkB,CAAD,IAAO;IAClCH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;EACD,CAF2B,EAEzB,EAFyB,CAA5B,CALoB,CAOZ;;EACR,MAAMC,QAAQ,GAAGrB,WAAW,CAAC,MAAM;IACjC,MAAMsB,QAAQ,GAAGV,IAAI,CAACW,MAAL,CAAYC,QAAQ,CAACV,MAAD,CAApB,CAAjB;IACAD,OAAO,CAACS,QAAD,CAAP;IACAP,SAAS,CAAC,EAAD,CAAT;IACAC,OAAO,CAACS,OAAR,CAAgBC,KAAhB;EACD,CAL2B,EAKzB,CAACZ,MAAD,EAASF,IAAT,CALyB,CAA5B,CARoB,CAaA;;EAEpB,MAAMe,GAAG,GAAG5B,OAAO,CAAC,MAAMG,UAAU,CAACU,IAAD,CAAjB,EAAyB,CAACA,IAAD,CAAzB,CAAnB;EAEA,oBACE;IAAA,wBACE;MAAO,KAAK,EAAEE,MAAd;MAAsB,QAAQ,EAAEG;IAAhC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEI,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UACGT,IAAI,CAACgB,GAAL,CAAS,CAACR,KAAD,EAAQS,KAAR,kBACR;QAAA,UAAiBT;MAAjB,GAASS,KAAT;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAHF,eAQE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,OACe3B,UAAU,CAACU,IAAD,CADzB;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA/BD;;GAAMD,O;;KAAAA,O;AAiCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D\\\\Desktop\\\\hello_react\\\\styling-react\\\\src\\\\StyledComponent.js\";\nimport React, { Component } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sizes = {\n  desktop: 1024,\n  tablet: 768\n}; // 위에 있는 size 객체에 따라 자동으로 media 쿼리 함수를 만들어 준다.\n// 참고: https://www.styled-components.com/docs/advanced#media-templates\n\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = function () {\n    return css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...arguments)};\n    }\n  `;\n  };\n\n  return acc;\n});\nconst Box = styled.div`\n  /* props로 넣어준 값을 직접 전달해 줄 수 있다. */\n  background: ${props => props.color || \"blue\"};\n  padding: 1rem;\n  display: flex;\n  /* 기본적으로 가로 크기 1024px에 가운데 정렬을 하고\n     가로 크기가 작아짐에 따라 크기를 줄이고\n     768px 미만이 되면 꽉 채운다. */\n  width: 1024px;\n  margin: 0 auto;\n  @media (max-width: 1024px) {\n    width: 768px;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n_c = Box;\nconst Button = styled.button`\n  background: white;\n  color: black;\n  border-radius: 4px;\n  padding 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  font-size: 1rem;\n  font-weight: 600;\n\n/* & 문자를 사용하여 Sass처럼 자기 자신 선택 가능 */\n&:hover {\n  background: rgba(255, 255, 255, 0.9);\n}\n\n/* 다음 코드는 inverted 값이 true일 때 특정 스타일을 부여해 준다. */\n${props => props.inverted && css`\n    background: none;\n    border: 2px solid white;\n    color: white;\n    &:hover {\n      background: white;\n      color: black;\n    }\n  `};\n& + buton {\n  margin-left: 1rem;\n}\n`;\n_c2 = Button;\n\nconst StyledComponent = () => /*#__PURE__*/_jsxDEV(Box, {\n  color: \"black\",\n  children: [/*#__PURE__*/_jsxDEV(Button, {\n    children: \"\\uC548\\uB155\\uD558\\uC138\\uC694\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    inverted: true,\n    children: \"\\uD14C\\uB450\\uB9AC\\uB9CC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 3\n}, this);\n\n_c3 = StyledComponent;\nexport default StyledComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"StyledComponent\");","map":{"version":3,"names":["React","Component","styled","css","sizes","desktop","tablet","media","Object","keys","reduce","acc","label","Box","div","props","color","Button","button","inverted","StyledComponent"],"sources":["C:/Users/D/Desktop/hello_react/styling-react/src/StyledComponent.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst sizes = {\r\n  desktop: 1024,\r\n  tablet: 768,\r\n};\r\n\r\n// 위에 있는 size 객체에 따라 자동으로 media 쿼리 함수를 만들어 준다.\r\n// 참고: https://www.styled-components.com/docs/advanced#media-templates\r\nconst media = Object.keys(sizes).reduce((acc, label) => {\r\n  acc[label] = (...args) => css`\r\n    @media (max-width: ${sizes[label] / 16}em) {\r\n      ${css(...args)};\r\n    }\r\n  `;\r\n\r\n  return acc;\r\n});\r\n\r\nconst Box = styled.div`\r\n  /* props로 넣어준 값을 직접 전달해 줄 수 있다. */\r\n  background: ${(props) => props.color || \"blue\"};\r\n  padding: 1rem;\r\n  display: flex;\r\n  /* 기본적으로 가로 크기 1024px에 가운데 정렬을 하고\r\n     가로 크기가 작아짐에 따라 크기를 줄이고\r\n     768px 미만이 되면 꽉 채운다. */\r\n  width: 1024px;\r\n  margin: 0 auto;\r\n  @media (max-width: 1024px) {\r\n    width: 768px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: white;\r\n  color: black;\r\n  border-radius: 4px;\r\n  padding 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n\r\n/* & 문자를 사용하여 Sass처럼 자기 자신 선택 가능 */\r\n&:hover {\r\n  background: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n/* 다음 코드는 inverted 값이 true일 때 특정 스타일을 부여해 준다. */\r\n${(props) =>\r\n  props.inverted &&\r\n  css`\r\n    background: none;\r\n    border: 2px solid white;\r\n    color: white;\r\n    &:hover {\r\n      background: white;\r\n      color: black;\r\n    }\r\n  `};\r\n& + buton {\r\n  margin-left: 1rem;\r\n}\r\n`;\r\n\r\nconst StyledComponent = () => (\r\n  <Box color=\"black\">\r\n    <Button>안녕하세요</Button>\r\n    <Button inverted={true}>테두리만</Button>\r\n  </Box>\r\n);\r\n\r\nexport default StyledComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;;AAEA,MAAMC,KAAK,GAAG;EACZC,OAAO,EAAE,IADG;EAEZC,MAAM,EAAE;AAFI,CAAd,C,CAKA;AACA;;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,MAAnB,CAA0B,CAACC,GAAD,EAAMC,KAAN,KAAgB;EACtDD,GAAG,CAACC,KAAD,CAAH,GAAa;IAAA,OAAaT,GAAI;AAChC,yBAAyBC,KAAK,CAACQ,KAAD,CAAL,GAAe,EAAG;AAC3C,QAAQT,GAAG,CAAC,YAAD,CAAU;AACrB;AACA,GAJe;EAAA,CAAb;;EAMA,OAAOQ,GAAP;AACD,CARa,CAAd;AAUA,MAAME,GAAG,GAAGX,MAAM,CAACY,GAAI;AACvB;AACA,gBAAiBC,KAAD,IAAWA,KAAK,CAACC,KAAN,IAAe,MAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;KAAMH,G;AAkBN,MAAMI,MAAM,GAAGf,MAAM,CAACgB,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAGH,KAAD,IACAA,KAAK,CAACI,QAAN,IACAhB,GAAI;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI;AACJ;AACA;AACA;AACA,CAhCA;MAAMc,M;;AAkCN,MAAMG,eAAe,GAAG,mBACtB,QAAC,GAAD;EAAK,KAAK,EAAC,OAAX;EAAA,wBACE,QAAC,MAAD;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,eAEE,QAAC,MAAD;IAAQ,QAAQ,EAAE,IAAlB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAAA;EAAA;EAAA;EAAA;AAAA,QADF;;MAAMA,e;AAON,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}